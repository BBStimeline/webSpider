


app {


  server {
    protocol = "http"
    host = "flowdev.neoap.com"
    port = 30348
    InternalToken = "aklj345lkjOIu345olnmadf"
  }

  http {
    interface = "0.0.0.0"
    port = 30348
  }

  client {
    appIds = ["captain", "dogwood", "cangjie", "leader", "smallspider", "galaxy", "chaos"]
    secureKeys = ["dsacjmowcpjsodaux84wc32xm", "932cx87orxeo8mdf7348cfrh", "spo84ucn8p9xu43qn9ctfdso",
      "Gkahdslsj7hdlsk9jdfaks2jdhk5", "dojen3l5nkjdnci9fa0jenl4", "jkhsakdjsjk3878ljklJhLKJA8YU", "idj28vxkaspWi215fSm49vph"]
  }

  posts {
    postsListMinLength = 2000
    postsListMaxLength = 2500
  }

}

dependence {

  spider.config {

    smth.account {
      userId = ["bestofus"]
      userPwd = ["bemyguest"]
    }

    byr.account {
      userId = ["Harden13", "wangdachui66"]
      userPwd = ["aaa123", "aaa123"]
    }

    backupProxy {
      ip = ["182.92.83.118"]
      port = [53128]
      username = ["seeker001"]
      password = ["sk1qaz@WSX"]
      addGate = 30000
      removeGate = 20000
      defaultAvailable = true
    }

    authCheck = true
    intervalMaxTaskNumber = 400 //5秒内最多执行的任务数量
    backupLimiter = 20 //备用代理模式下，5秒内最多执行的任务数量
    hottestBoardInterval = 60000 //milliseconds
    hotBoardInterval = 120000 //milliseconds
    newPostInterval = 600000 //milliseconds
    historyPostInterval = 100 //milliseconds
    useProxy = true
    //    useProxy = false
    spiderNumber = 10
    spiderIdleInterval = 1000 //milliseconds
    newTopTenInterval = 600000 //milliseconds
    destImageFilePath = "C:/Users/Arrow/IdeaProjects/smallspider/backend/src/main/scala/com/neo/sk/smallspider/"
    daytimeUpdateCheckInterval = 120000 //milliseconds
    nighttimeUpdateCheckInterval = 600000 //milliseconds
    imageRefreshInterval = 1800000 //milliseconds
  }

  hesita.config {
    appId = "OnlyForTest"
    secureKey = "Sl34yUBMu5UkeZPg"
    protocol = "http"
    imgProtocol = "http"
    domain = "pic.neoap.com"
    //    host = "10.1.29.250"
    host = "localhost"
    port = 30226
  }

}

mail.conf {
  EMAIL_ADDRESS = "babysitterneo@163.com"
  EMAIL_PASSWORD = "aaa1234"
//  EMAIL_PASSWORD = "aaa123
//  SMTPHOST = "smtp.exmail.qq.com"
  SMTPHOST = "smtp.163.com"
  SMTPPORT = "25"
//  IMAP_SERVER = "imap.exmail.qq.com"
  IMAP_SERVER = "imap.163.com"
  IMAP_PROTOCOL = "imap"
}

slick.db {
  //  url = "jdbc:postgresql://192.168.0.247:5432/smallspider"
  url = "jdbc:postgresql://localhost:5432/issue"
  user = "postgres"
  password = "123456"
  maximumPoolSize = 3
  connectTimeout = 30000
  idleTimeout = 300000
  maxLifetime = 900000
}

session {

  cookie {
    name = "wbct"
    domain = none
    path = "/"
    secure = false
    httpOnly = true
    httpOnly = true
    maxAge = 1 days
  }
  encryptData = false
  serverSecret = "0gfmOdf34doi2dg-aj53Kelk4;ztymc23;r3r3l*m3^20M3;l20;[+Gfdyrtyr4sKrtsyhf92"

}


akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "DEBUG"
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"


  actor {


    warn-about-java-serializer-usage = false

    default-dispatcher {

      fork-join-executor {
        # Min number of threads to cap factor-based parallelism number to
        parallelism-min = 8

        # The parallelism factor is used to determine thread pool size using the
        # following formula: ceil(available processors * factor). Resulting size
        # is then bounded by the parallelism-min and parallelism-max values.
        # parallelism-factor = 3.0
        parallelism-factor = 3.0

        # Max number of threads to cap factor-based parallelism number to
        parallelism-max = 64

        # Setting to "FIFO" to use queue like peeking mode which "poll" or "LIFO" to use stack
        # like peeking mode which "pop".
        task-peeking-mode = "FIFO"
      }
    }

    my-blocking-dispatcher {
      type = Dispatcher
      executor = "thread-pool-executor"

      thread-pool-executor {
        # Keep alive time for threads
        keep-alive-time = 60s

        # Define a fixed thread pool size with this property. The corePoolSize
        # and the maximumPoolSize of the ThreadPoolExecutor will be set to this
        # value, if it is defined. Then the other pool-size properties will not
        # be used.
        #
        # Valid values are: `off` or a positive integer.
        fixed-pool-size = off

        # Min number of threads to cap factor-based corePoolSize number to
        core-pool-size-min = 16

        # The core-pool-size-factor is used to determine corePoolSize of the
        # ThreadPoolExecutor using the following formula:
        # ceil(available processors * factor).
        # Resulting size is then bounded by the core-pool-size-min and
        # core-pool-size-max values.
        core-pool-size-factor = 100.0

        # Max number of threads to cap factor-based corePoolSize number to
        core-pool-size-max = 256

        # Minimum number of threads to cap factor-based maximumPoolSize number to
        max-pool-size-min = 16

        # The max-pool-size-factor is used to determine maximumPoolSize of the
        # ThreadPoolExecutor using the following formula:
        # ceil(available processors * factor)
        # The maximumPoolSize will not be less than corePoolSize.
        # It is only used if using a bounded task queue.
        max-pool-size-factor = 100.0

        # Max number of threads to cap factor-based maximumPoolSize number to
        max-pool-size-max = 256

        # Specifies the bounded capacity of the task queue (< 1 == unbounded)
        task-queue-size = -1

        # Specifies which type of task queue will be used, can be "array" or
        # "linked" (default)
        task-queue-type = "linked"

        # Allow core threads to time out
        allow-core-timeout = on
      }

      throughput = 100
    }

  }


  http {

    server {

      remote-address-header = on

      parsing {

        max-content-length = 12m
        max-chunk-ext-length = 256
        max-chunk-size = 2m

      }
    }
  }


  persistence {

    journal {

      plugin = "akka.persistence.journal.leveldb"

      leveldb {
        dir = "./akkaPersist/journal"
        #dir = "/home/zhangtao/product/mpAuthor/akkaPersist/journal"

        #off for sbt test run, on for produce.
        native = off
      }
    }

    snapshot-store {

      plugin = "akka.persistence.snapshot-store.local"

      local {
        dir = "./akkaPersist/snapshot"
        #dir = "/home/zhangtao/product/mpAuthor/akkaPersist/snapshot"
      }
    }
  }

}




